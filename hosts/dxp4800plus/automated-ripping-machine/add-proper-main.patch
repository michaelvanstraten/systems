diff --git a/arm/runui.py b/arm/runui.py
index d0de9e2..4605829 100755
--- a/arm/runui.py
+++ b/arm/runui.py
@@ -22,27 +22,32 @@ def is_docker():
     )
 
 
-host = cfg.arm_config['WEBSERVER_IP']
-# Check if auto ip address 'x.x.x.x' or if inside docker - set internal ip from host and use WEBSERVER_IP for notify
-if host == 'x.x.x.x' or is_docker():
-    # autodetect host IP address
-    from netifaces import interfaces, ifaddresses, AF_INET
-    ip_list = []
-    for interface in interfaces():
-        inet_links = ifaddresses(interface).get(AF_INET, [])
-        for link in inet_links:
-            ip = link['addr']
-            if ip != '127.0.0.1':
-                ip_list.append(ip)
-    if len(ip_list) > 0:
-        host = ip_list[0]
-    else:
-        host = '127.0.0.1'
-
-app.logger.info(f"Starting ARM-UI on interface address - {host}:{cfg.arm_config['WEBSERVER_PORT']}")
-
-# Start ARM using waitress, default number of threads is "4", set ARM count to "40"
-# Higher thread count to accommodate slow blocking processes when the UI is polling the ripper during ripping
-if __name__ == '__main__':
+def main():
+    """Main function to start the ARM UI server"""
+    host = cfg.arm_config['WEBSERVER_IP']
+    # Check if auto ip address 'x.x.x.x' or if inside docker - set internal ip from host and use WEBSERVER_IP for notify
+    if host == 'x.x.x.x' or is_docker():
+        # autodetect host IP address
+        from netifaces import interfaces, ifaddresses, AF_INET
+        ip_list = []
+        for interface in interfaces():
+            inet_links = ifaddresses(interface).get(AF_INET, [])
+            for link in inet_links:
+                ip = link['addr']
+                if ip != '127.0.0.1':
+                    ip_list.append(ip)
+        if len(ip_list) > 0:
+            host = ip_list[0]
+        else:
+            host = '127.0.0.1'
+
+    app.logger.info(f"Starting ARM-UI on interface address - {host}:{cfg.arm_config['WEBSERVER_PORT']}")
+
+    # Start ARM using waitress, default number of threads is "4", set ARM count to "40"
+    # Higher thread count to accommodate slow blocking processes when the UI is polling the ripper during ripping
     from waitress import serve
     serve(app, host=host, port=cfg.arm_config['WEBSERVER_PORT'], threads=40)
+
+
+if __name__ == '__main__':
+    main()
